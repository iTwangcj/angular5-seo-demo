import { FormControl } from '@angular/forms';import { ErrorMessage } from './message.models';export function isEmptyInputValue (value) {    // we don't check for string here so it also works with arrays    return value == null || value.length === 0;}export const VALIDATE_MESSAGES: ErrorMessage[] = [    {        error: 'required',        format: label => `${label}未填写`,        pattern: (control) => null    },    {        error: 'minlength',        format: (label, error) => `${label}必须至少${error.requiredLength}字符`,        pattern: (control) => null    },    {        error: 'maxlength',        format: (label, error) => `${label}必须不大于${error.requiredLength}字符`,        pattern: (control) => null    },    {        error: 'max',        format: (label, error) => `${label} 必须不大于 ${error.max}`,        pattern: (control) => null    },    {        error: 'min',        format: (label, error) => `${label} 必须不得少于 ${error.min}`,        pattern: (control) => null    },    {        error: 'email',        format: (label, error) => `无效的邮件地址`,        pattern: (control) => {            if (isEmptyInputValue(control.value)) {                return null;            }            const email = /^([a-zA-Z0-9]+[_|.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/;            return email.test(control.value) ? null : { 'email': true };        }    },    {        error: 'equalTo',        format: (label, error) => `两次输入不一致`,        pattern: (password) => {            return (control: FormControl) => {                if (isEmptyInputValue(control.value)) {                    return null;                }                return control.value !== password.value ? { 'equalTo': true } : null;            };        }    }];